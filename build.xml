<?xml version="1.0" encoding="UTF-8"?>

<project name="prjectname" default="build">

    <target name="build"
            depends="clean, prepare, lint, phploc, pdepend, phpcpd, phpcs, phpmd, phpunit, phpcb, apigen"/>


    <!-- build/clean.xml -->
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <antcall target="symfony.clean" />
    </target>

    <target name="symfony.clean" description="Cleans up symfony data">
        <delete file="${basedir}/composer.phar" />
        <delete file="${basedir}/app/config/parameters.yml" />
        <delete dir="${basedir}/app/cache" />
    </target>


    <!-- build/prepare.xml -->
    <target name="prepare"
            depends="clean"
            description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <antcall target="symfony.prepare" />
    </target>

    <target name="symfony.prepare">
        <mkdir dir="${basedir}/app/cache" />
        <mkdir dir="${basedir}/web/uploads" />
        <!--<copy file="${basedir}/app/config/parameters.yml.dist" tofile="${basedir}/app/config/parameters.yml" />-->
        <exec executable="bash">
            <arg value="-c" />
            <arg value="curl -s http://getcomposer.org/installer | php" />
        </exec>
        <exec executable="php">
            <arg value="composer.phar" />
            <arg value="install" />
        </exec>
        <exec executable="app/console">
            <arg value="doctrine:database:drop" />
            <arg value="-n" />
            <arg value="--force" />
        </exec>
        <exec executable="app/console">
            <arg value="doctrine:database:create" />
            <arg value="-n" />
        </exec>
        <exec executable="app/console">
            <arg value="doctrine:schema:update" />
            <arg value="-n" />
            <arg value="--complete" />
            <arg value="--force" />
        </exec>
        <exec executable="app/console">
            <arg value="assetic:dump" />
            <arg value="-n" />
            <arg value="--env=prod" />
            <arg value="--no-debug" />
        </exec>
        <exec executable="app/console">
            <arg value="assets:install" />
            <arg value="-n" />
            <arg value="--env=prod" />
            <arg value="--no-debug" />
            <arg value="web" />
        </exec>
    </target>


    <!-- build/lint.xml -->
    <target name="lint"
            description="Syntax check">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/app">
                <include name="**/*.php" />
                <exclude name="**/cache/**" />
            </fileset>

            <fileset dir="${basedir}/src">
                <include name="**/*.php" />
            </fileset>

            <fileset dir="${basedir}/web">
                <include name="**/*.php" />
            </fileset>
        </apply>

        <apply executable="${basedir}/app/console" failonerror="true">
            <arg value="twig:lint" />
            <arg value="--env=test" />

            <fileset dir="${basedir}/app/Resources">
                <include name="**/*.twig" />
            </fileset>

            <fileset dir="${basedir}/src">
                <include name="**/*.twig" />
            </fileset>
        </apply>
    </target>


    <!-- build/phploc.sml -->
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="--exclude" />
            <arg value="${basedir}/app" />
            <arg value="--exclude" />
            <arg value="${basedir}/web" />
            <arg path="${basedir}" />
        </exec>
    </target>


    <!-- build/pdepend.xml -->
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/app,${basedir}/vendor" />
            <arg path="${basedir}" />
        </exec>
    </target>


    <!-- build/phpcpd.xml -->
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="app" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg path="${basedir}" />
        </exec>
    </target>


    <!-- build/phpcs.xml -->
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--ignore=${basedir}/vendor/*,${basedir}/app/*,${basedir}/web/*,*.js,*.css" />
            <arg path="${basedir}/src" />
        </exec>
    </target>


    <!-- build/phpmd.xml -->
    <target name="phpmd" description="Perform project mess detection using PHPMD">
        <exec executable="phpmd">
            <arg path="${basedir}/app/Resources,${basedir}/src" />
            <arg value="xml" />
            <arg value="${basedir}/build/ruleset/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>


    <!-- build/phpunit.xml -->
    <target name="phpunit" description="PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c" />
            <arg value="app/" />
        </exec>
    </target>


    <!-- build/phpcb.xml -->
    <target name="phpcb">
        <exec executable="phpcb">
            <arg value="--log"/>
            <arg path="${basedir}/build/logs"/>
            <arg value="--source"/>
            <arg path="${basedir}/src"/>
            <arg value="--output"/>
            <arg path="${basedir}/build/code-browser"/>
        </exec>
    </target>


    <!-- build/apigen.xml -->
    <target name="apigen" description="Generate documentation using apigen">
        <exec executable="apigen">
            <arg value="--source" />
            <arg path="${basedir}/src/" />
            <arg value="--destination" />
            <arg path="${basedir}/build/api/" />
            <arg value="--exclude" />
            <arg path="${basedir}/vendor/" />
            <arg value="--update-check no" />
        </exec>
    </target>

</project>
